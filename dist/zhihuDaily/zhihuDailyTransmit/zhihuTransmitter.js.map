{"version":3,"sources":["zhihuDailyTransmit/zhihuTransmitter.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAM,gBAAgB,kBAAQ,CAAC,WAAD,EAAc,WAAd,CAAR,CAAtB;;;AAGA,SAAS,aAAT,CAAuB,SAAvB,EAAkC;AAChC,MAAM,WAAW,cAAI,KAAJ,CAAU,SAAV,CAAjB;;AAEA,SAAO,cAAc,GAAd,CAAkB,SAAS,QAAT,CAAkB,OAAlB,CAA0B,OAA1B,EAAmC,EAAnC,CAAlB,CAAP;AACD;;;;;AAKD,SAAS,gBAAT,CAA0B,SAA1B,EAAqC;AACnC,MAAM,WAAW,cAAI,KAAJ,CAAU,SAAV,CAAjB;AACA,MAAI,SAAS,QAAT,KAAsB,QAA1B,EAAoC;AAClC,WAAO,gBAAM,GAAb;AACD;AACD,SAAO,eAAK,GAAZ;AACD;;AAED,SAAS,mBAAT,GAAwD;AAAA,MAA3B,QAA2B,yDAAhB,GAAgB;AAAA,MAAX,SAAW;;AACtD,SAAO,sBAAY,UAAC,OAAD,EAAU,MAAV,EAAqB;AACtC,QAAI,cAAc,QAAd,CAAJ,EAA6B;;AAE3B,uBAAiB,QAAjB,EAA2B,QAA3B,EAAqC,eAAO;AAC1C,YAAI,IAAI,UAAJ,KAAmB,GAAvB,EAA4B;AAC1B,oBAAU,MAAV,CAAiB,GAAjB;AACA,cAAI,EAAJ,CAAO,MAAP,EAAe,iBAAS;AAAE,sBAAU,KAAV,CAAgB,KAAhB;AAAyB,WAAnD;AACA,cAAI,EAAJ,CAAO,KAAP,EAAc,YAAM;AAClB,sBAAU,GAAV;AACA;AACD,WAHD;AAID,SAPD,MAOO;AACL,iBAAO,IAAI,UAAX;AACD;AACF,OAXD,EAWG,EAXH,CAWM,OAXN,EAWe;AAAA,eAAM,OAAO,GAAP,CAAN;AAAA,OAXf;AAYD,KAdD,MAcO;AACL,gBAAU,MAAV,CAAiB,GAAjB,EAAsB,IAAtB,CAA2B,yCAA3B;AACD;AACF,GAlBM,CAAP;AAmBD;;kBAEc,mB","file":"zhihuDailyTransmit/zhihuTransmitter.js","sourcesContent":["import http from 'http';\nimport https from 'https';\nimport url from 'url';\n\nconst zhihuHostName = new Set(['zhihu.com', 'zhimg.com']);\n\n// 检查是否是知乎的域名\nfunction checkHostName(urlString) {\n  const zhihuUrl = url.parse(urlString);\n  // 比较顶级域名\n  return zhihuHostName.has(zhihuUrl.hostname.replace(/.+?\\./, ''));\n}\n\n/*\n根据url的不同返回http或https的get方法。\n */\nfunction getRequestMethod(urlString) {\n  const zhihuUrl = url.parse(urlString);\n  if (zhihuUrl.protocol === 'https:') {\n    return https.get;\n  }\n  return http.get;\n}\n\nfunction zhihuApiTransmitter(zhihuUrl = '/', serverRes) {\n  return new Promise((resolve, reject) => {\n    if (checkHostName(zhihuUrl)) {\n      // 有的链接是http协议，有的是https协议，不同的协议用不同的get方法。\n      getRequestMethod(zhihuUrl)(zhihuUrl, res => {\n        if (res.statusCode === 200) {\n          serverRes.status(200);\n          res.on('data', chunk => { serverRes.write(chunk); });\n          res.on('end', () => {\n            serverRes.end();\n            resolve();\n          });\n        } else {\n          reject(res.statusCode);\n        }\n      }).on('error', () => reject(502));\n    } else {\n      serverRes.status(404).send('The request url is not belong to Zhihu.');\n    }\n  });\n}\n\nexport default zhihuApiTransmitter;\n"],"sourceRoot":"/source/"}